name: App CI/CD

on:
  pull_request:
    paths:
      - 'apps/microservices-demo/**'
  push:
    branches: [ main ]
    paths:
      - 'apps/microservices-demo/**'

jobs:
  validate:
    name: Validate overlay
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Render kustomize
        run: kustomize build apps/microservices-demo/overlays/dev > rendered.yaml

      - name: Install kubeconform
        run: |
          curl -L -o kubeconform.tar.gz https://github.com/yannh/kubeconform/releases/download/v0.6.6/kubeconform-linux-amd64.tar.gz
          tar -xzf kubeconform.tar.gz
          sudo mv kubeconform /usr/local/bin/
          kubeconform -v

      - name: Schema validation
        run: kubeconform -strict -ignore-missing-schemas -summary rendered.yaml

  deploy:
    name: Deploy to dev
    if: github.ref == 'refs/heads/main'
    needs: validate
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-dev
      cancel-in-progress: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.29.0

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name "${{ secrets.EKS_CLUSTER_NAME }}" --region "${{ secrets.AWS_REGION }}"

      - name: Apply overlay
        run: kustomize build apps/microservices-demo/overlays/dev | kubectl apply -f -

      - name: Wait for frontend rollout
        run: kubectl rollout status deploy/frontend -n dev --timeout=5m

      - name: Output ALB DNS
        run: |
          DNS=$(kubectl get ingress frontend-alb -n dev -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "ALB DNS: $DNS" >> $GITHUB_STEP_SUMMARY
          echo "ALB_DNS=$DNS" >> $GITHUB_ENV

      - name: Smoke check
        run: curl -sSf "http://${{ env.ALB_DNS }}/" >/dev/null

